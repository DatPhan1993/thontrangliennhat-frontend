import React, { useState, useEffect } from 'react';
import classNames from 'classnames/bind';
import { Link } from 'react-router-dom';
import routes from '~/config/routes';
import { format } from 'date-fns';
import styles from './News.module.scss';
import { Helmet } from 'react-helmet';

// Import dummy data
import newsData from '../../assets/dummy/news';

const cx = classNames.bind(styles);

const News = () => {
    const [news, setNews] = useState([]);
    const [loading, setLoading] = useState(true);
    const [activeTab, setActiveTab] = useState("newest");

    useEffect(() => {
        setLoading(true);
        try {
            // Process news data based on active tab
            let filteredNews = [...newsData];
            
            if (activeTab === "newest") {
                filteredNews.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
            } else if (activeTab === "featured") {
                filteredNews.sort((a, b) => b.views - a.views);
            } else if (activeTab === "random") {
                filteredNews.sort(() => Math.random() - 0.5);
            }
            
            setNews(filteredNews);
            setLoading(false);
        } catch (err) {
            console.error("Error loading news:", err);
            setLoading(false);
        }
    }, [activeTab]);

    // Function to format date
    const formatDate = (dateString) => {
        try {
            return format(new Date(dateString), "dd/MM/yyyy");
        } catch (error) {
            console.error("Error formatting date:", error);
            return "Invalid date";
        }
    };

    if (loading) {
        return <div>Loading...</div>;
    }

    return (
        <article className={cx('wrapper')}>
            <Helmet>
                <title>Tin T·ª©c | HTX N√¥ng Nghi·ªáp - D·ªãch V·ª• T·ªïng H·ª£p Li√™n Nh·∫≠t</title>
                <meta
                    name="description"
                    content="HTX N√¥ng Nghi·ªáp - D·ªãch V·ª• T·ªïng H·ª£p Li√™n Nh·∫≠t ho·∫°t ƒë·ªông ƒëa ng√†nh ngh·ªÅ, trong ƒë√≥ ti√™u bi·ªÉu c√≥ th·ªÉ k·ªÉ ƒë·∫øn l√† nu√¥i c√° l·ªìng, c·∫£i t·∫°o n√¢ng c·∫•p v∆∞·ªùn c√¢y quanh c√°c h·ªì th·ªßy ƒëi·ªán, ph√°t tri·ªÉn v·ªÅ du l·ªãch sinh th√°i, du l·ªãch n√¥ng nghi·ªáp."
                />
                <meta 
                    name="keywords" 
                    content="tin t·ª©c, c·∫≠p nh·∫≠t, thontrangliennhat" 
                />
                <meta name="author" content="HTX N√¥ng Nghi·ªáp - D·ªãch V·ª• T·ªïng H·ª£p Li√™n Nh·∫≠t" />
            </Helmet>
            <div className={cx('inner')}>
                <h2 className={cx('news-title')}>TIN T·ª®C</h2>
                <div className={cx('news-container')}>
                    {news.map((newsItem) => (
                        <div key={newsItem.id} className={cx('news-item')}>
                            <Link to={`${routes.news}/${newsItem.slug}`} className={cx('news-link')}>
                                <div className={cx('news-image-container')}>
                                    <img 
                                        src={newsItem.images} 
                                        alt={newsItem.title} 
                                        className={cx('news-image')}
                                        onError={(e) => {
                                            console.log('Image error:', e.target.src);
                                            e.target.src = 'https://via.placeholder.com/600x400?text=Image+not+found';
                                        }}
                                    />
                                </div>
                                <div className={cx('news-content')}>
                                    <h3>{newsItem.title}</h3>
                                    <p className={cx('news-summary')}>{newsItem.summary}</p>
                                    <div className={cx('news-meta')}>
                                        <span className={cx('news-views')}>
                                            üëÅÔ∏è {newsItem.views}
                                        </span>
                                        <span className={cx('news-date')}>{formatDate(newsItem.createdAt)}</span>
                                    </div>
                                </div>
                            </Link>
                        </div>
                    ))}
                </div>
                <div className={cx('news-tabs')}>
                    <button
                        className={classNames(cx('tab'), {
                            [cx('active')]: activeTab === "newest",
                        })}
                        onClick={() => setActiveTab("newest")}
                    >
                        M·ªöI NH·∫§T
                    </button>
                    <button
                        className={classNames(cx('tab'), {
                            [cx('active')]: activeTab === "featured",
                        })}
                        onClick={() => setActiveTab("featured")}
                    >
                        N·ªîI B·∫¨T
                    </button>
                    <button
                        className={classNames(cx('tab'), {
                            [cx('active')]: activeTab === "random",
                        })}
                        onClick={() => setActiveTab("random")}
                    >
                        NG·∫™U NHI√äN
                    </button>
                </div>
            </div>
        </article>
    );
};

export default News;
